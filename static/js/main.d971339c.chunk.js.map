{"version":3,"sources":["components/SignIn/styles.js","components/SignIn/index.js","components/SignOut/index.js","components/ChatMessage/styles.js","components/ChatMessage/index.js","components/ChatRoom/styles.js","components/ChatRoom/index.js","components/App/styles.js","components/App/index.js","globalStyle/index.js","index.js"],"names":["SignInButton","styled","button","SignIn","auth","firebase","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatMessagesContainer","div","isUserMsgOwner","ChatMessageText","p","senderText","receiverText","ChatMessagePicture","img","ChatMessageSentAt","span","css","ChatMessage","message","text","uid","photoURL","sentAt","isMsgOwner","Fragment","src","alt","ChatRoomMain","main","ChatRoomForm","form","ChatRoomSendButton","ChatRoomInput","input","ChatRoom","firestore","chatBottom","useRef","useEffect","current","scrollIntoView","behavior","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","msgValue","setMsgValue","sendMessage","e","a","preventDefault","replace","length","add","createdAt","FieldValue","serverTimestamp","Date","getHours","getMinutes","map","msg","id","ref","onSubmit","value","onChange","event","target","type","AppHeader","header","AppSection","section","AppContainer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useAuthState","user","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d971339c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SignInButton = styled.button`\n\tcolor: #282c34;\n\tbackground: white;\n\tmax-width: 400px;\n\tmargin: 0 auto;\n`;\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport { SignInButton } from './styles';\n\nconst SignIn = () => {\n\tconst auth = firebase.auth();\n\tconst signInWithGoogle = () => {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tauth.signInWithPopup(provider);\n\t};\n\n\treturn (\n\t\t<SignInButton onClick={signInWithGoogle}>Sign In with Google</SignInButton>\n\t);\n};\n\nexport default SignIn;\n","import React from 'react';\nimport firebase from 'firebase/app';\n\nconst SignOut = () => {\n\tconst auth = firebase.auth();\n\treturn (\n\t\tauth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\n\t);\n};\n\nexport default SignOut;\n","import styled, { css } from 'styled-components';\n\nexport const ChatMessagesContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\n\t${({ isUserMsgOwner }) => isUserMsgOwner && `flex-direction: row-reverse;`}\n`;\n\nexport const ChatMessageText = styled.p`\n\tmax-width: 500px;\n\tmargin-bottom: 12px;\n\tline-height: 24px;\n\tpadding: 10px 20px;\n\tborder-radius: 25px;\n\tposition: relative;\n\tcolor: white;\n\ttext-align: center;\n\n\t${({ isUserMsgOwner }) => (isUserMsgOwner ? senderText : receiverText)}\n`;\n\nexport const ChatMessagePicture = styled.img`\n\twidth: 40px;\n\theight: 40px;\n\tborder-radius: 50%;\n\tmargin: 2px 5px;\n`;\n\nexport const ChatMessageSentAt = styled.span`\n\tcolor: white;\n\ttext-align: right;\n\tfont-size: 14px;\n`;\n\nconst senderText = css`\n\tcolor: white;\n\tbackground: #0b93f6;\n\talign-self: flex-end;\n`;\n\nconst receiverText = css`\n\tbackground: #e5e5ea;\n\tcolor: black;\n`;\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport {\n\tChatMessagePicture,\n\tChatMessagesContainer,\n\tChatMessageSentAt,\n\tChatMessageText,\n} from './styles';\n\nconst ChatMessage = ({ message }) => {\n\tconst auth = firebase.auth();\n\n\tconst { text, uid, photoURL, sentAt } = message;\n\n\tconst isMsgOwner = uid === auth.currentUser.uid;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ChatMessagesContainer isUserMsgOwner={isMsgOwner}>\n\t\t\t\t<ChatMessageSentAt>{sentAt}</ChatMessageSentAt>\n\t\t\t\t<ChatMessagePicture src={photoURL} alt=\"Profile\" />\n\t\t\t\t<ChatMessageText isUserMsgOwner={uid === auth.currentUser.uid}>\n\t\t\t\t\t{text}\n\t\t\t\t</ChatMessageText>\n\t\t\t</ChatMessagesContainer>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ChatMessage;\n","import styled from 'styled-components';\n\nexport const ChatRoomMain = styled.main`\n\tpadding: 10px;\n\theight: 80vh;\n\tmargin: 10vh 0 10vh;\n\toverflow-y: scroll;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t&::-webkit-scrollbar {\n\t\twidth: 0.25rem;\n\t}\n\n\t&::-webkit-scrollbar-track {\n\t\tbackground: #1e1e24;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\tbackground: #6649b8;\n\t}\n`;\n\nexport const ChatRoomForm = styled.form`\n\theight: 10vh;\n\tposition: fixed;\n\tbottom: 0;\n\tbackground-color: rgb(24, 23, 23);\n\twidth: 100%;\n\tmax-width: 728px;\n\tdisplay: flex;\n\tfont-size: 1.5rem;\n`;\n\nexport const ChatRoomSendButton = styled.button`\n\twidth: 20%;\n\tbackground-color: rgb(56, 56, 143);\n`;\n\nexport const ChatRoomInput = styled.input`\n\tline-height: 1.5;\n\twidth: 100%;\n\tfont-size: 1.5rem;\n\tbackground: rgb(58, 58, 58);\n\tcolor: white;\n\toutline: none;\n\tborder: none;\n\tpadding: 0 10px;\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport ChatMessage from '../ChatMessage';\nimport firebase from 'firebase/app';\nimport {\n\tChatRoomForm,\n\tChatRoomInput,\n\tChatRoomMain,\n\tChatRoomSendButton,\n} from './styles';\n\nconst ChatRoom = () => {\n\tconst auth = firebase.auth();\n\n\tconst firestore = firebase.firestore();\n\tconst chatBottom = useRef();\n\n\tuseEffect(() => {\n\t\tchatBottom.current.scrollIntoView({ behavior: 'smooth' });\n\t});\n\n\tconst messagesRef = firestore.collection('messages');\n\tconst query = messagesRef.orderBy('createdAt').limit(25);\n\n\tconst [messages] = useCollectionData(query, { idField: 'id' });\n\n\tconst [msgValue, setMsgValue] = useState('');\n\n\tconst sendMessage = async (e) => {\n\t\te.preventDefault();\n\t\tsetMsgValue('');\n\n\t\tif (!msgValue.replace(/\\s/g, '').length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { uid, photoURL } = auth.currentUser;\n\n\t\tawait messagesRef.add({\n\t\t\ttext: msgValue,\n\t\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tuid,\n\t\t\tphotoURL,\n\t\t\tsentAt: new Date().getHours() + ':' + new Date().getMinutes(),\n\t\t});\n\n\t\tchatBottom.current.scrollIntoView({ behavior: 'smooth' });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ChatRoomMain>\n\t\t\t\t{messages &&\n\t\t\t\t\tmessages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n\t\t\t\t<div ref={chatBottom}></div>\n\t\t\t</ChatRoomMain>\n\n\t\t\t<ChatRoomForm onSubmit={sendMessage}>\n\t\t\t\t<ChatRoomInput\n\t\t\t\t\tvalue={msgValue}\n\t\t\t\t\tonChange={(event) => setMsgValue(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<ChatRoomSendButton type=\"submit\">ðŸ’¬</ChatRoomSendButton>\n\t\t\t</ChatRoomForm>\n\t\t</>\n\t);\n};\n\nexport default ChatRoom;\n","import styled from 'styled-components';\n\nexport const AppHeader = styled.header`\n\tbackground-color: #181717;\n\theight: 10vh;\n\tmin-height: 50px;\n\tcolor: white;\n\tposition: fixed;\n\twidth: 100%;\n\tmax-width: 728px;\n\ttop: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tz-index: 99;\n\tpadding: 10px;\n\tbox-sizing: border-box;\n`;\n\nexport const AppSection = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tmin-height: 100vh;\n\tbackground-color: rgb(40, 37, 53);\n`;\n\nexport const AppContainer = styled.div`\n\ttext-align: center;\n\tmax-width: 728px;\n\tmargin: 0 auto;\n`;\n","import React from 'react';\nimport SignIn from '../SignIn';\nimport SignOut from '../SignOut';\nimport ChatRoom from '../ChatRoom';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { AppContainer, AppHeader, AppSection } from './styles';\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCuo33u8jJHHNO3q73MM7dflaBSdFzkhz8\",\n\tauthDomain: \"george-website-41c7e.firebaseapp.com\",\n\tprojectId: \"george-website-41c7e\",\n\tstorageBucket: \"george-website-41c7e.appspot.com\",\n\tmessagingSenderId: \"399442024875\",\n\tappId: \"1:399442024875:web:2c19e9e642068e2a091aee\",\n\tmeasurementId: \"G-FWCKNPB0RW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\n\nfunction App() {\n\tconst [user] = useAuthState(auth);\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t<AppHeader>\n\t\t\t\t<h1>George Chat ðŸ”¥ðŸ’¬</h1>\n\t\t\t\t<SignOut />\n\t\t\t</AppHeader>\n\t\t\t<AppSection>{user ? <ChatRoom /> : <SignIn />}</AppSection>\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: #282c34;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\nbutton {\n\tbackground-color: #282c34; /* Green */\n\tborder: none;\n\tcolor: white;\n\tpadding: 15px 32px;\n\ttext-align: center;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tfont-size: 1.25rem;\n}\n\nbutton:disabled {\n\topacity: 0.5;\n\tcursor: not-allowed;\n}\n\nul,\nli {\n\ttext-align: left;\n\tlist-style: none;\n}\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport GlobalStyle from './globalStyle';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}